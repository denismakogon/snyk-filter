package filter

import (
	"log"
)

// PrintPackageNameVersion prints fixable package name and version
func (v *Vulnerability) PrintPackageNameVersion() {
	ids := v.Identifiers
	CWEs := ids.CWEtoString()
	CVEs := ids.CVEtoString()

	log.Printf("%v==%s\n",
		v.Name, v.NearestFixedInVersion)
	if v.HasCWEs() {
		log.Printf("\t - per %v\n", CWEs)
	}
	if v.HasCVEs() {
		log.Printf("\t - per %v\n", CVEs)
	}
}

// HasCWEs returns true/false if a vulnerability has CWE references
func (v *Vulnerability) HasCWEs() bool {
	return len(v.Identifiers.CWE) > 0
}

// HasCVEs returns true/false if a vulnerability has CWE references
func (v *Vulnerability) HasCVEs() bool {
	return len(v.Identifiers.CVE) > 0
}
